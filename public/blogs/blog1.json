{
    "titel": "A Webshop with weaknesses",
    "date": "25.09.2023",
    "content": "<div className=\"blog-post\"><h2>Security</h2><p>Some Time ago I was playing Valorant one of my favorite videogames. I played poorly and eventually lost while having a really bad KDA (in the realm of 4/24/5). I got really tilted and slammed my Hand really hard onto the Armrest of my chair. It broke :( .</p><p>So I contacted the Support of the Manufacturer of my gamingchair. A few Mails went by and I had sent my personal information and told the support what spare part I needed. Some days later I received an E-mail telling me to go to website and pay.</p><p>After I clicked on the link, I got directed onto a website that looked like it was old or not really finished. I took a glance at the URL and was a little confused. The link looked like this:</p><p><div class=\"longstring\">example.com/shipstream/payment.php?order=200004416&paymentID=24f9c13b2dc5c6e9ed1a96f08b3b62690413a6815a2c149bdc9c79c0bcd98e99</div></p>I'm a newbie to the field of IT-security, even though I was currently in my practical phase in the SAP BTP Trust Team, but I was wondering how they handled authentication since I hadn't logged in to a user account or anything similar. On the website was only a price, orderID, the article that I was trying to order, and a link to PayPal. Turns out they didn't really handle it. It seems like they relied on the fact that no personal data was displayed. I started slowly by trying to manipulate the `order` field in the URL; I decreased the value by one, et voilà, I now saw a different order. The paymentID remained the same, but the price that one should pay changed from order to order.<br><p>Now, I was thrilled because I just had discovered my first web vulnerability. Feeling a bit lightheaded and unaware of potential consequences, I continued experimenting on my company device without anonymity precautions. I attempted basic SQL injections like `true;--`, but aside from specific error logs, I found nothing new.<br>After sharing my experience with colleagues from the team I was working on, who were developers and security experts, we recreated my findings in a meeting. They advised documenting the vulnerabilities with screenshots and notifying the website owner. We decided to try cross-site scripting, which worked like a charm:<img src='./ressources/XSS_Screenshot.png' alt='Screenshot of XSS' class='blog-screenshot'></img>(We also received some source code snippets for further analysis, possibly in another blog post.)<br>I documented the changes and sent an email to the support address from the website. It went something like, 'Hi, I'm an IT student, and I found something on your website.' A day later, I received a thankful response, promising to address the issue. A few hours later, to my surprise, they informed me they would send my €40 spare part for free. It's moments like these that remind me of the positive impact one can have by taking the initiative to reach out and make a difference.</div>"
}